1. Find a guest who exists in the database and has not booked a room.

  SELECT guests.first_name, guests.last_name, bookings.bookingid
  FROM guests
  LEFT JOIN bookings
  ON bookings.guestid = guests.guestid
  WHERE bookings.guestid IS NULL;

  first_name | last_name | bookingid
 ------------+-----------+-----------
  Kevin      | Dove      |
 (1 row)


  Find bookings for a guest who has booked two rooms for the same dates.

  SELECT bookings.check_in, bookings.roomid, bookings.guestid, guests.first_name, guests.last_name
  FROM bookings
  JOIN guests ON bookings.guestid = guests.guestid
  WHERE check_in
  IN
    (SELECT check_in
    FROM bookings
    GROUP BY check_in
    HAVING COUNT(*) > 1)
  ORDER BY bookings.guestid;

    check_in  | roomid | guestid | first_name | last_name
  ------------+--------+---------+------------+-----------
   2018-08-01 |      1 |       1 | Steeve     | Powers
   2018-08-01 |      5 |       1 | Steeve     | Powers
   2018-08-03 |      4 |       4 | Oscar      | Robinson
   2018-08-03 |      5 |       4 | Oscar      | Robinson
  (4 rows)


  Find bookings for a guest who has booked one room several times on different dates.

  SELECT bookings.check_in, bookings.roomid, bookings.guestid, guests.first_name, guests.last_name
  FROM bookings
  JOIN guests ON bookings.guestid = guests.guestid
  WHERE roomid
  IN
    (SELECT roomid
    FROM bookings
    GROUP BY roomid
    HAVING COUNT(*) > 1)
  ORDER BY bookings.guestid;

    check_in  | roomid | guestid | first_name | last_name
  ------------+--------+---------+------------+-----------
   2018-08-01 |      5 |       1 | Steeve     | Powers
   2018-08-04 |      2 |       2 | Bob        | Mathews
   2018-08-06 |      2 |       2 | Bob        | Mathews
   2018-08-03 |      5 |       4 | Oscar      | Robinson
  (4 rows)


  Count the number of unique guests who have booked the same room.

  SELECT roomid, COUNT(DISTINCT guestid) AS num_of_guests
  FROM bookings
  GROUP BY roomid
  Having num_of_guests > 1;

  roomid | num_of_guests
 --------+---------------
       1 |             1
       2 |             1
       3 |             1
       4 |             1
       5 |             2
 (5 rows)

3. Build a database for the students/classes data model. Create a SQL file that creates the tables and inserts sample data (the questions below will help you create the data). Write queries for the following data:

  All students who have taken a particular class.

  SELECT students.name AS student, classes.name AS class_name
  FROM report
  JOIN classes ON report.class_id = classes.id
  JOIN students ON report.student_id = students.id
  WHERE classes.name = 'Math';
  student | class_name
  ---------+------------
   Goku    | Math
   Gohan   | Math
   Vegeta  | Math
   Bulma   | Math
   Krillin | Math
   Picolo  | Math
   Goten   | Math
   Trunks  | Math
   Frieza  | Math
  (9 rows)


  The number of each grade (using letter grades A-F) earned in a particular class.

  SELECT report.grade, COUNT(report.grade)
  FROM report
  JOIN classes ON report.class_id = classes.id
  WHERE classes.name = 'Math'
  GROUP BY report.grade;
    grade | count
  -------+-------
   A     |     2
   A+    |     2
   B     |     1
   C     |     3
   F     |     1

  Class names and the total number of students who have taken each class in the list.

  SELECT classes.name, COUNT(report.student_id) AS num_of_students
  FROM report
  JOIN classes ON report.class_id = classes.id
  GROUP BY classes.name;
  name             | num_of_students
  -----------------+-----------------
  Math             |               9
  Computer Science |               1
  Chemistry        |               1
  English          |               1
  Anatomy          |               1
  History          |               1
  French           |               1
  Calculus         |               1
  Biology          |               1
  (9 rows)

  The class taken by the largest number of students.

  SELECT classes.name, COUNT(report.student_id) AS num_of_students
  FROM report
  JOIN classes ON report.class_id = classes.id
  GROUP BY classes.name
  ORDER BY num_of_students DESC LIMIT 1;
  name | num_of_students
  -----+-----------------
  Math |               9
  (1 row)
